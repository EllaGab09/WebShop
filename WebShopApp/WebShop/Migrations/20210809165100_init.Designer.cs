// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShop.Data;

namespace WebShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210809165100_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebShop.Models.DetailedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductIdFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductIdFK")
                        .IsUnique();

                    b.ToTable("DetailedProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Slim keyboard",
                            ProductIdFK = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Kickass keyboard, solid buy",
                            ProductIdFK = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Small but an exellent second monitor.",
                            ProductIdFK = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Quick delivery, almost to big",
                            ProductIdFK = 4
                        });
                });

            modelBuilder.Entity("WebShop.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Customer = "Admin@Admin.com",
                            TotalPrice = 2399
                        },
                        new
                        {
                            Id = 2,
                            Customer = "Admin@Admin.com",
                            TotalPrice = 4000
                        },
                        new
                        {
                            Id = 3,
                            Customer = "root@root.com",
                            TotalPrice = 199
                        });
                });

            modelBuilder.Entity("WebShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Product name");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "SomeURL",
                            Name = "Mini-Keyboard",
                            Price = 199
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "SomeURL",
                            Name = "Gaming-keyboard",
                            Price = 399
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "SomeURL",
                            Name = "LG 23' HD",
                            Price = 2000
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "SomeURL",
                            Name = "Siemens 28' 4K",
                            Price = 4000
                        });
                });

            modelBuilder.Entity("WebShop.Models.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderFK")
                        .HasColumnType("int");

                    b.Property<int>("ProductFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderFK");

                    b.HasIndex("ProductFK");

                    b.ToTable("ProductOrder");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderFK = 1,
                            ProductFK = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderFK = 1,
                            ProductFK = 3
                        },
                        new
                        {
                            Id = 3,
                            OrderFK = 2,
                            ProductFK = 4
                        },
                        new
                        {
                            Id = 4,
                            OrderFK = 3,
                            ProductFK = 1
                        });
                });

            modelBuilder.Entity("WebShop.Models.DetailedProduct", b =>
                {
                    b.HasOne("WebShop.Models.Product", "Product")
                        .WithOne("DetailedProduct")
                        .HasForeignKey("WebShop.Models.DetailedProduct", "ProductIdFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebShop.Models.ProductOrder", b =>
                {
                    b.HasOne("WebShop.Models.Order", "Order")
                        .WithMany("ProductOrder")
                        .HasForeignKey("OrderFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebShop.Models.Product", "Product")
                        .WithMany("ProductOrder")
                        .HasForeignKey("ProductFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebShop.Models.Order", b =>
                {
                    b.Navigation("ProductOrder");
                });

            modelBuilder.Entity("WebShop.Models.Product", b =>
                {
                    b.Navigation("DetailedProduct");

                    b.Navigation("ProductOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
