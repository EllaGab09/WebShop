// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebShop.Data;

namespace WebShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210803142237_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebShopDB.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category name");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Keyboards"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Monitors"
                        });
                });

            modelBuilder.Entity("WebShopDB.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryIdFK")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Product name");

                    b.HasKey("ID");

                    b.HasIndex("CategoryIdFK");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryIdFK = 1,
                            Name = "Mini-Keyboard"
                        },
                        new
                        {
                            ID = 2,
                            CategoryIdFK = 1,
                            Name = "Gaming-keyboard"
                        },
                        new
                        {
                            ID = 3,
                            CategoryIdFK = 2,
                            Name = "LG 23' HD"
                        },
                        new
                        {
                            ID = 4,
                            CategoryIdFK = 2,
                            Name = "Siemens 28' 4K"
                        });
                });

            modelBuilder.Entity("WebShopDB.Models.Review", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Author name");

                    b.Property<int>("ProductIdFK")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ProductIdFK");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Author = "1337 gamer",
                            ProductIdFK = 2,
                            Text = "Kickass keyboard, solid buy"
                        },
                        new
                        {
                            ID = 2,
                            Author = "1337 gamer",
                            ProductIdFK = 3,
                            Text = "Works as a second monitor"
                        },
                        new
                        {
                            ID = 3,
                            Author = "1337 gamer",
                            ProductIdFK = 4,
                            Text = "Loads of dead pixels :("
                        },
                        new
                        {
                            ID = 4,
                            Author = "Mamma Berit",
                            ProductIdFK = 4,
                            Text = "Quick delivery, almost to big"
                        });
                });

            modelBuilder.Entity("WebShopDB.Models.Product", b =>
                {
                    b.HasOne("WebShopDB.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryIdFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebShopDB.Models.Review", b =>
                {
                    b.HasOne("WebShopDB.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductIdFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebShopDB.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebShopDB.Models.Product", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
